/*!
 * @status stable
 * @version 1.0.0
 */

/**
 * Декларация константы или вывод значения
 *
 * @param {string} command - текст команды
 *
 * @param {number} commandLength - длина команды
 * @param {!DirObj} dir - объект управления директивами
 *
 * @param {Object} adv - дополнительные параметры
 * @param {boolean} adv.dryRun - true, если холостая обработка
 * @param {!Object} adv.info - информация о шаблоне (название файлы, узла и т.д.)
 */
Snakeskin.Directions['const'] = function (command, commandLength, dir, adv) {
	var tplName = dir.tplName;

	var i = dir.i,
		startI = dir.startI;

	// Хак для экспорта console api
	if (!dir.parentTplName && !dir.protoStart && /^console\./.test(command)) {
		dir.save(dir.prepareOutput(command) + ';');
		return;
	}

	// Инициализация переменных
	if (/^[@#$a-z_][$\w\[\].'"\s]*[^=]=[^=]/im.test(command)) {
		let varName = command.split('=')[0].trim(),
			mod = varName.charAt(0);

		if (tplName) {
			if (dir.isAdvTest(adv.dryRun) && !dir.varCache[varName] && mod !== '#' && mod !== '@') {
				// Попытка повторной инициализации переменной
				if (constCache[tplName][varName] || constICache[tplName][varName]) {
					throw dir.error(
						'Constant "' + varName + '" is already defined ' +
						'(command: {' + command + '}, template: "' + tplName + ', ' +
							dir.genErrorAdvInfo(adv.info) +
						'")!'
					);
				}

				// Попытка инициализировать переменную с зарезервированным именем
				if (sysConst[varName]) {
					throw dir.error(
						'Can\'t declare constant "' + varName + '", try another name ' +
						'(command: {' + command + '}, template: "' + tplName + ', ' +
							dir.genErrorAdvInfo(adv.info) +
						'")!'
					);
				}

				// Попытка инициализации переменной внутри итератора
				if (dir.hasParent({'forEach': true, 'forIn': true})) {
					throw dir.error(
						'Constant "' + varName + '" can\'t be defined in a iterator ' +
						'(command: {' + command + '}, template: "' + tplName + ', ' +
							dir.genErrorAdvInfo(adv.info) +
						'")!'
					);
				}

				// Кеширование
				constCache[tplName][varName] = {
					from: i - startI - commandLength,
					to: i - startI
				};

				fromConstCache[tplName] = i - startI + 1;
			}

			if (!dir.parentTplName && !dir.protoStart) {
				if (!dir.varCache[varName] && mod !== '#' && mod !== '@') {
					dir.save(dir.prepareOutput((!/[.\[]/m.test(varName) ? 'var ' : '') + command + ';', true));

				} else {
					dir.save(dir.prepareOutput(command + ';', true));
				}
			}

		} else {
			dir.save('if (typeof Snakeskin !== \'undefined\') { Snakeskin.Vars.' +
				dir.prepareOutput(command, true, null, true) +
			'; }');
		}

	// Вывод значения
	} else {
		if (!dir.structure.parent) {
			throw dir.error('Directive "output" can only be used within a "template" or "proto", ' +
				dir.genErrorAdvInfo(adv.info)
			);
		}

		if (dir.isSimpleOutput(adv.info)) {
			dir.save('__SNAKESKIN_RESULT__ += ' + dir.prepareOutput(command) + ';');
		}
	}
};