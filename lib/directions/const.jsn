/*!
 * @status stable
 * @version 1.0.0
 */

Snakeskin.addDirective(
	'const',

	null,

	function (command, commandLength) {
		var tplName = this.tplName;

		// Инициализация переменных
		if (/^[@#$a-z_][$\w\[\].'"\s]*[^=]=[^=]/im.test(command)) {
			let varName = command.split('=')[0].trim(),
				mod = varName.charAt(0);

			if (this.structure.parent) {
				this.startInlineDir('const');

				if (this.isAdvTest() && !this.varCache[varName] && mod !== '#' && mod !== '@') {
					// Попытка повторной инициализации переменной
					if (constCache[tplName][varName] || constICache[tplName][varName]) {
						throw this.error('Constant "' + varName + '" is already defined');
					}

					// Попытка инициализировать переменную с зарезервированным именем
					if (sysConst[varName]) {
						throw this.error('Can\'t declare constant "' + varName + '", try another name');
					}

					// Кеширование
					constCache[tplName][varName] = {
						from: this.i - this.startI - commandLength,
						to: this.i - this.startI
					};

					fromConstCache[tplName] = this.i - this.startI + 1;
				}

				if (this.isSimpleOutput()) {
					if (!this.varCache[varName] && mod !== '#' && mod !== '@') {
						this.save(this.prepareOutput((!/[.\[]/m.test(varName) ? 'var ' : '') + command + ';', true));

					} else {
						this.save(this.prepareOutput(command + ';', true));
					}
				}

			} else {
				this.startInlineDir('globalVar');
				this.save('if (typeof Snakeskin !== \'undefined\') { Snakeskin.Vars.' +
					this.prepareOutput(command, true, null, true) +
				'; }');
			}

		// Вывод значения
		} else {
			if (!this.structure.parent) {
				throw this.error('Directive "output" can only be used within a "template" or "proto"');
			}

			this.startInlineDir('output');
			if (this.isSimpleOutput()) {
				this.save('__SNAKESKIN_RESULT__ += ' + this.prepareOutput(command) + ';');
			}
		}
	}
);