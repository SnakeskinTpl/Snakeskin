/**!
 * @status stable
 * @version 1.0.0
 */

/**
 * Кеш переменных
 */
DirObj.prototype.varCache = {
	init: function () {
		return {};
	}
};

// Короткая форма директивы var
Snakeskin.Replacers.push((cmd) => cmd.replace(/^:/, 'var '));

/**
 * Директива var
 *
 * @param {string} command - текст команды
 *
 * @param {number} commandLength - длина команды
 * @param {!DirObj} dir - объект управления директивами
 *
 * @param {Object} adv - дополнительные параметры
 * @param {!Object} adv.info - информация о шаблоне (название файлы, узла и т.д.)
 */
Snakeskin.Directions['var'] = function (command, commandLength, dir, adv) {
	var parent = dir.structure.parent;

	if (!parent) {
		throw dir.error('Directive "var" can only be used within a "template" or "proto", ' +
			dir.genErrorAdvInfo(adv.info)
		);
	}

	var struct = command.split('='),
		varName = struct[0].trim();

	// Попытка повторной инициализации переменной,
	// которая установлена как константа
	if (constCache[dir.tplName][varName] || constICache[dir.tplName][varName]) {
		throw dir.error(
			'Variable "' + varName + '" is already defined as constant ' +
				'(command: {var ' + command + '}, template: "' + dir.tplName + ', ' +
				dir.genErrorAdvInfo(adv.info) +
			'")!'
		);
	}

	var realVar = varName + '_' + parent.name + '_' + dir.i;
	dir.varCache[varName] = {
		name: realVar,
		parent: parent
	};

	//dir.startInlineDir('var');

	if (dir.isSimpleOutput()) {
		struct[0] = realVar;
		dir.save(dir.prepareOutput('var ' + command + ';', true));
	}
};