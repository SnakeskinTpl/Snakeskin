/*!
 * @status stable
 * @version 1.0.0
 */

Snakeskin.sysDirs['block'] = true;

/**
 * Директива block
 *
 * @param {string} command - текст команды
 *
 * @param {number} commandLength - длина команды
 * @param {!DirObj} dir - объект управления директивами
 *
 * @param {Object} adv - дополнительные параметры
 * @param {boolean} adv.dryRun - true, если холостая обработка
 * @param {!Object} adv.info - информация о шаблоне (название файлы, узла и т.д.)
 */
Snakeskin.Directions['block'] = function (command, commandLength, dir, adv) {
	if (!dir.structure.parent) {
		throw dir.error('Directive "block" can only be used within a "template" or "proto", ' +
			dir.genErrorAdvInfo(adv.info)
		);
	}

	dir.startDir('block', {
		name: command
	});

	if (dir.isAdvTest(adv.dryRun)) {
		// Попытка декларировать блок несколько раз
		if (blockCache[dir.tplName][command]) {
			throw dir.error(
				'Block "' + command + '" is already defined ' +
				'(command: {block ' + command + '}, template: "' + dir.tplName + ', ' +
					dir.genErrorAdvInfo(adv.info) +
				'")!'
			);
		}

		blockCache[dir.tplName][command] = {from: dir.i - dir.startI + 1};
	}
};

/**
 * Окончание block
 *
 * @param {string} command - текст команды
 *
 * @param {number} commandLength - длина команды
 * @param {!DirObj} dir - объект управления директивами
 *
 * @param {Object} adv - дополнительные параметры
 * @param {boolean} adv.dryRun - true, если холостая обработка
 */
Snakeskin.Directions['blockEnd'] = function (command, commandLength, dir, adv) {
	if (dir.isAdvTest(adv.dryRun)) {
		let block = blockCache[dir.tplName][dir.structure.params.name];
		block.to = dir.i - dir.startI - commandLength - 1;
		block.body = dir.source.substring(dir.startI).substring(block.from, block.to);
	}
};