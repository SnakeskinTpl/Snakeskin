/*!
 * @status stable
 * @version 1.0.0
 */

Snakeskin.addDirective(
	'forEach',

	{
		inBlock: true
	},

	function (command) {
		this.startDir();
		if (this.isSimpleOutput()) {
			let part = command.split('=>'),
				val = this.prepareOutput(part[0], true);

			let varsStr = '';

			if (part[1]) {
				let vars = part[1].split(',');

				for (let i = 0; i < vars.length; i++) {
					let el = this.declVar(vars[i].trim());
					varsStr += 'var ' + el + ' = ';
				}
			}

			this.save(varsStr + 'if (' + this.prepareOutput(command, true) + ') {');
		}
	}
);

/**
 * Директива forIn
 *
 * @param {string} command - текст команды
 *
 * @param {number} commandLength - длина команды
 * @param {!DirObj} dir - объект управления директивами
 *
 * @param {Object} adv - дополнительные параметры
 * @param {!Object} adv.info - информация о шаблоне (название файлы, узла и т.д.)
 */
Snakeskin.Directions['forIn'] = function (command, commandLength, dir, adv) {
	if (!dir.structure.parent) {
		throw dir.error('Directive "forIn" can only be used within a "template" or "proto", ' +
			dir.genErrorAdvInfo(adv.info)
		);
	}

	dir.startDir('forIn');
	if (dir.isSimpleOutput()) {
		let part = command.split('=>'),
			val = dir.prepareOutput(part[0], true);

		dir.save(val + ' && Snakeskin.forIn(' + val +
			', function (' + (part[1] || '') + ') {');
	}
};

/**
 * Окончание forIn
 *
 * @param {string} command - текст команды
 * @param {number} commandLength - длина команды
 * @param {!DirObj} dir - объект управления директивами
 */
Snakeskin.Directions['forInEnd'] = function (command, commandLength, dir) {
	if (dir.isSimpleOutput()) {
		dir.save('}, this);');
	}
};

/**
 * Директива for
 *
 * @param {string} command - текст команды
 *
 * @param {number} commandLength - длина команды
 * @param {!DirObj} dir - объект управления директивами
 *
 * @param {Object} adv - дополнительные параметры
 * @param {!Object} adv.info - информация о шаблоне (название файлы, узла и т.д.)
 */
Snakeskin.Directions['for'] = function (command, commandLength, dir, adv) {
	if (!dir.structure.parent) {
		throw dir.error('Directive "for" can only be used within a "template" or "proto", ' +
			dir.genErrorAdvInfo(adv.info)
		);
	}

	dir.startDir('for');
	if (dir.isSimpleOutput()) {
		dir.save('for (');
	}
};

/**
 * Директива while
 *
 * @param {string} command - текст команды
 *
 * @param {number} commandLength - длина команды
 * @param {!DirObj} dir - объект управления директивами
 *
 * @param {Object} adv - дополнительные параметры
 * @param {!Object} adv.info - информация о шаблоне (название файлы, узла и т.д.)
 */
Snakeskin.Directions['while'] = function (command, commandLength, dir, adv) {
	if (!dir.structure.parent) {
		throw dir.error('Directive "while" can only be used within a "template" or "proto", ' +
			dir.genErrorAdvInfo(adv.info)
		);
	}

	dir.startDir('while');
	if (dir.isSimpleOutput()) {
		dir.save('while (' + dir.prepareOutput(command, true) + ') {');
	}
};

/**
 * Директива repeat
 *
 * @param {string} command - текст команды
 *
 * @param {number} commandLength - длина команды
 * @param {!DirObj} dir - объект управления директивами
 *
 * @param {Object} adv - дополнительные параметры
 * @param {!Object} adv.info - информация о шаблоне (название файлы, узла и т.д.)
 */
Snakeskin.Directions['repeat'] = function (command, commandLength, dir, adv) {
	if (!dir.structure.parent) {
		throw dir.error('Directive "repeat" can only be used within a "template" or "proto", ' +
			dir.genErrorAdvInfo(adv.info)
		);
	}

	dir.startDir('repeat');
	if (dir.isSimpleOutput()) {
		dir.save('do {');
	}
};

/**
 * Окончание repeat
 *
 * @param {string} command - текст команды
 * @param {number} commandLength - длина команды
 * @param {!DirObj} dir - объект управления директивами
 */
Snakeskin.Directions['repeatEnd'] = function (command, commandLength, dir) {
	if (dir.isSimpleOutput()) {
		dir.save('} while (' + dir.prepareOutput(command, true) + ');');
	}
};

/**
 * Директива until
 */
Snakeskin.Directions['until'] = Snakeskin.Directions['end'];

/**
 * Директива break
 *
 * @param {string} command - текст команды
 * @param {number} commandLength - длина команды
 * @param {!DirObj} dir - объект управления директивами
 */
Snakeskin.Directions['break'] = function (command, commandLength, dir) {
	if (dir.isSimpleOutput()) {
		dir.save('break;');
	}
};

/**
 * Директива continue
 *
 * @param {string} command - текст команды
 * @param {number} commandLength - длина команды
 * @param {!DirObj} dir - объект управления директивами
 */
Snakeskin.Directions['continue'] = function (command, commandLength, dir) {
	if (dir.isSimpleOutput()) {
		dir.save('continue;');
	}
};